{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Notification/Notification.module.css","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["module","exports","Section","title","children","className","styles","FeedbackOptions","options","onLeaveFeedback","Object","keys","map","option","btnTextContent","toUpperCase","slice","toLowerCase","type","name","btn","onClick","Statistics","good","neutral","bad","total","positivePercentage","list","item","text","feedback","importantText","Notification","message","notice","App","state","handleClickBtn","e","target","setState","countTotalFeedback","values","reduce","value","countPositiveFeedbackPercentage","Math","round","totalFeedback","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.882d0bd1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__3hUh8\",\"item\":\"Statistics_item__2bUpw\",\"text\":\"Statistics_text__1rOAO\",\"feedback\":\"Statistics_feedback__1sV0n\",\"importantText\":\"Statistics_importantText__xD1UR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notice\":\"Notification_notice__2PTjL\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section className={styles.Section}>\r\n      <h3 className={styles.title}>{title}</h3>\r\n\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  const optionsKeys = Object.keys(options);\r\n\r\n  return optionsKeys.map(option => {\r\n    const btnTextContent =\r\n      option[0].toUpperCase() + option.slice(1).toLowerCase();\r\n\r\n    return (\r\n      <button\r\n        key={option}\r\n        type=\"button\"\r\n        name={option}\r\n        className={styles.btn}\r\n        onClick={onLeaveFeedback}\r\n      >\r\n        {btnTextContent}\r\n      </button>\r\n    );\r\n  });\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.shape({\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <ul className={styles.list}>\r\n    <li className={styles.item}>\r\n      <span className={styles.text}>Good:</span>{' '}\r\n      <span className={styles.feedback}>{good}</span>\r\n    </li>\r\n    <li className={styles.item}>\r\n      <span className={styles.text}>Neutral:</span>{' '}\r\n      <span className={styles.feedback}>{neutral}</span>\r\n    </li>\r\n    <li className={styles.item}>\r\n      <span className={styles.text}>Bad:</span>{' '}\r\n      <span className={styles.feedback}>{bad}</span>\r\n    </li>\r\n    <li className={styles.item}>\r\n      <span className={styles.text}>Total:</span>{' '}\r\n      <span className={styles.importantText}>{total}</span>\r\n    </li>\r\n    <li className={styles.item}>\r\n      <span className={styles.text}>Positive feedback:</span>{' '}\r\n      <span className={styles.importantText}>{positivePercentage} %</span>\r\n    </li>\r\n  </ul>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Notification.module.css';\r\n\r\nconst Notification = ({ message }) => {\r\n  return <p className={styles.notice}>{message}</p>;\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from 'react';\n\n//Components\nimport Section from './components/Section';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Statistics from './components/Statistics';\nimport Notification from './components/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleClickBtn = e => {\n    const { name } = e.target;\n\n    this.setState({ [name]: this.state[name] + 1 });\n  };\n\n  countTotalFeedback = () => {\n    const values = Object.values(this.state);\n    return values.reduce((total, value) => total + value, 0);\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    let total = this.countTotalFeedback();\n    return Math.round((good * 100) / total);\n  };\n\n  render() {\n    const totalFeedback = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n    const { good, neutral, bad } = this.state;\n    \n    return (\n      <div className=\"container\">\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.handleClickBtn}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {totalFeedback ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={totalFeedback}\n              positivePercentage={positivePercentage}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","//Libs\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n//Components\nimport App from './App';\n\n//Styles\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\n//Render\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Section_Section__1aSJf\",\"title\":\"Section_title__MM5XY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__3_yB2\"};"],"sourceRoot":""}